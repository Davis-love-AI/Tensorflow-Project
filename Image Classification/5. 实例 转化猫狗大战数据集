数据集目录结构：
-cat_and_dog_r
  -dog
    dog_0000.jpg
    dog_0001.jpg
    ...
  -cat
    cat_0000.jpg
    cat_0001.jpg
    ...
  ...

5.1 生成TFRecords格式数据

def create_record(cwd="C:/cat_and_dog_r", classes={'cat', 'dog'}, img_height=224, img_width=224):
  writer = tf.python_io.TFRecordWriter("train.tfrecords")
  for index, name in enumerate(classes):
    class_path = cmd + os.sep + name + os.sep
    for img_name in os.listdir(class_path):
      img_path = class_path + img_name
      img = Image.open(img_path)
      img = img.resize((img_height, img_width))
      img_raw = img.tobytes()
      example = tf.train.Example(features=tf.train.Features(feature={
        "label":tf.train.Feature(int64_lisst=tf.train.Int64List(value=[index])),
        "image_raw":tf.train.Feature(bytes_list=tf.train.ByteList(value=[img_raw]))
      }))
      writer.write(example.SerializeToString())
  writer.close()
    
5.2 读取TFRecords

def read_and_decode(filename, img_height=224, img_width=224, batchSize=100):
  filename_queue = tf.train.string_input_producer([filename], shuffle=True)
  reader = tf.TFRecordReader()
  _, serialized_example = reader.read(filename_queue)
  features = tf.parse_single_example(serialized_example,
    features={
      'label': tf.FixedLenFeature([], tf.int64),
      'image': tf.FixedLenFeature([], tf,string),
    }
  )
  label = features['label']
  img = features['img_raw']
  img = tf.decode_raw(img, tf.uint8])
  img = tf.reshape(img, [img_height, img_width, 3])
  img = tf.cast(img, tf.float32) * (1. / 128) - 0.5
  label = tf.cast(label], tf.int32)
  min_after_dqueue = batchSize * 9
  capacity = min_after_dequeue + batchSize
  exampleBatch, labelBatch = tf.train.shuffle_batch([img, label], batch_size=batchSize, capacity=capacity, min_after_dequeue=min_after_dequeue)
  return exampleBatch, labelBatch

if __name__ == "__main__":
  init = tf.initialize_all_variables()
  exampleBatch, labelBatch = batch_read_and_decode("train.tfrecords")
  
  with tf.Session() as sess:
    sess.run(init)
    coord = tf.train.Coordinator()
    threads = tf.train.start_queue_runners(coord=coord)
    
    for i in range(100):
      example, label = sesss.run([exampleBatch, labelBatch])
      print(example[0][112], label)
      print("------------%i-----------"%i)
    
    coord.request_stop()
    coord.join(threads)
  
  5.2 Slim 读取 TFRecords 格式数据
  
  with tf.Session() as sess:
    import tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test as dateset
    res = dataset._create_tfrecord_dataset("")
    from tensorflow.contrib.slim.python.slim.data import dataset_data_provider
    provider = dataset_data_provider.DatasetDataProvider(res)
    [image] = provider.get(['image'])
    [label] = provider.get(['label'])
    image = dataset._resize_image(image, 224, 224)
    import tensorflow.contrib.slim.python.slim.queues as queues
    with queues.QueueRunners(sess):
      image, label = sess.run([image, label])
      print(list[image.shape])
      print(lsit[label.shape])
    
    
